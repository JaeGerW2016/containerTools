#!/usr/bin/env python
# coding:utf-8

import os
import sys

mirrors = ["gcr.azk8s.cn","quay.azk8s.cn","dockerhub.azk8s.cn"]
prefix = ["docker.io","gcr.io","quay.io"]
namespace = "google_containers"
specialPrefix = "k8s.gcr.io"

def prefix_to_mirror(pre):
    prefixes = {
        "gcr.io": "gcr.azk8s.cn",
        "quay.io": "quay.azk8s.cn",
        "docker.io": "dockerhub.azk8s.cn"
     }
    return prefixes.get(pre, None)

def execute_sys_cmd(cmd):
    result = os.system(cmd)
    if result != 0:
        print("Error:" + cmd + "failed.")
        sys.exit(-1)

def usage():
    print("Usage:" + sys.argv(0) + " pull ${image}")

if __name__ == "__main__":
    if len(sys.argv) != 3:
        usage()
        sys.exit(-1)

    image = sys.argv[2]
    imageArray = image.split("/")
    len_imageArray = len(imageArray)

    if len_imageArray == 2 and imageArray[0] != specialPrefix:
        azmirror = prefix_to_mirror("docker.io")
        seq = (azmirror, imageArray[0], imageArray[1])

    if len_imageArray == 2 and imageArray[0] == specialPrefix:
        azmirror = prefix_to_mirror("gcr.io")
        seq = (azmirror, namespace, imageArray[1])

    if imageArray[0] == "quay.io":
        azmirror = prefix_to_mirror("quay.io")
        seq = (azmirror, imageArray[1], imageArray[2])
 
    if imageArray[0] == "gcr.io":
        azmirror = prefix_to_mirror("gcr.io")
        seq = (azmirror, imageArray[1], imageArray[2])

    if imageArray[0] == "docker.io":
        azmirror = prefix_to_mirror("docker.io")
        seq = (azmirror, imageArray[1], imageArray[2])

    if imageArray[0] not in prefix and imageArray[0] != specialPrefix and len_imageArray == 1:
        cmd = "docker pull {image}".format(image=image)
        execute_sys_cmd(cmd)
        sys.exit(0)

    newImage = "/".join(seq)

    print("-- pull {image} from {azmirror} instead --".format(image=image, azmirror=azmirror))
    cmd = "docker pull {image}".format(image=newImage)
    execute_sys_cmd(cmd)

    tag_cmd = "docker tag {newImage} {image}".format(newImage=newImage, image=image)
    execute_sys_cmd(tag_cmd)

    rmi_cmd = "docker rmi {newImage}".format(newImage=newImage)
    execute_sys_cmd(rmi_cmd)

    print("-- pull {image} done --".format(image=image))
    sys.exit(0)



























    

